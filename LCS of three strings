 class Solution
{
public:
    int dp[101][101][101];
    
    int  lcs(string &s1, string &s2, string &s3, int i, int j, int k, int n1, int n2, int n3)
    {
        if (i == n1 || j == n2 || k == n3)
            return 0;
    
        if (dp[i][j][k] != -1) return dp[i][j][k];
        
        
        if (s1[i] == s2[j] && s1[i] == s3[k])
            return dp[i][j][k] = 1 +  lcs(s1, s2, s3, i + 1, j + 1, k + 1, n1, n2, n3);
    
         
        return dp[i][j][k] = max({ lcs(s1, s2, s3, i + 1, j, k, n1, n2, n3),
                                  lcs(s1, s2, s3, i, j + 1, k, n1, n2, n3),
                                  lcs(s1, s2, s3, i, j, k + 1, n1, n2, n3)});
    }
    
    int LCSof3(string A, string B, string C, int n1, int n2, int n3)
    {
        for (int i = 0; i < n1; ++i)
        {
            for (int j = 0; j < n2; ++j)
            {
                for (int k = 0; k < n3; ++k)
                {
                    dp[i][j][k] = -1;
                }
            }
        }
        return  lcs(A, B, C, 0, 0, 0, n1, n2, n3);
    }
};
