  void LPS(string pat, vector<int> &lps){
        int m = pat.size();
        if(m == 1) return ;
        int len = 0 , i = 1;
        
        while(i < m){
            if(pat[i] == pat[len]){
                lps[i] = len + 1;
                len++; i++;
            }
            else{
                if(len != 0){
                    len = lps[len-1];
                }
                else{
                    lps[i] = 0;
                    i++;
                }
            }
        }
        
    }
        vector <int> search(string pat, string txt)
        {
             
            int m = pat.size() , n = txt.size();
            vector<int> lps(m,0);
            vector<int> ans;
            LPS(pat, lps);
            int i = 0 , j = 0;
            while(i < n){
                if(pat[j] == txt[i]){
                    i++;
                    j++;
                }
                else{
                    if(j != 0){
                        j = lps[j-1];
                    }
                    else{
                        i++;
                    }
                }
                if(j == m){
                    ans.push_back(i-j+1);
                    j = lps[j-1];
                }
            }
            if(ans.size() == 0) return {-1};
            return ans;
        }
