 
 int max_courses(int i, int j, vector<vector<int>>& dp, vector<int>& cost) {

     if (i == dp.size()) return 0;
    if (dp[i][j] != -1) return dp[i][j];
  dp[i][j] = max_courses(i + 1, j, dp, cost);
  
    if (j >= cost[i]) {
        dp[i][j] = max(dp[i][j], 1 + max_courses(i + 1, j - cost[i] + ((9 * cost[i]) / 10), dp, cost));
    }
    return dp[i][j];
}

public:
   int max_courses(int n, int total, vector<int>& cost) {
     vector<vector<int>> dp(n, vector<int>(total + 1, -1));
    return max_courses(0, total, dp, cost);
}
