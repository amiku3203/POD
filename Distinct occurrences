class Solution {
public:
    int modValue = 1e9 + 7;

    int countSubsequences(int i, int j, string s, string t,
                           vector<vector<int>>& dp)
    {
        if (j == t.size()) {
            return 1;
        }

        if (i == s.size()) {
            return 0;
        }

        if (dp[i][j] != -1) {
            return dp[i][j];
        }

        if (s[i] == t[j]) {
            return dp[i][j]
                   = (countSubsequences(i + 1, j + 1, s, t, dp) % modValue
                      + countSubsequences(i + 1, j, s, t, dp) % modValue)
                     % modValue;
        }

        return dp[i][j] = countSubsequences(i + 1, j, s, t, dp) % modValue;
    }

    int subsequenceCount(string s, string t)
    {
        vector<vector<int>> dp(s.size(),
                               vector<int>(t.size(), -1));

        return countSubsequences(0, 0, s, t, dp) % modValue;
    }
};
