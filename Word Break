class Solution
{
public:
     bool wordBreakHelper(string A, vector<string> &B, vector<int> &dp) {
    if (A.length() == 0) {
        return true;
    }
    if (dp[A.length()] != -1) {
        return dp[A.length()];
    }
    for (int i = 1; i <= A.length(); i++) {
        if (find(B.begin(), B.end(), A.substr(0, i)) != B.end() && wordBreakHelper(A.substr(i), B, dp)) {
            dp[A.length()] = 1;
            return true;
        }
    }
    dp[A.length()] = 0;
    return false;
}

int wordBreak(string A, vector<string> &B) {
    vector<int> dp(A.length() + 1, -1);
    return wordBreakHelper(A, B, dp);
}

};
